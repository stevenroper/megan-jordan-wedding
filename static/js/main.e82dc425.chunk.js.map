{"version":3,"sources":["constants/colors.ts","components/styled.tsx","App.tsx","index.tsx"],"names":["colors","darkBlue","lightBlue","green","gold","ivory","allProps","compose","background","border","color","layout","position","space","typography","Box","styled","Flex","flexbox","Grid","grid","Heading","Input","Paragraph","TextButton","App","React","useState","searchTerm","setSearchTerm","Array","fill","map","name","faker","findName","table","Math","round","random","people","filteredPeople","setFilteredPeople","fuzzySearch","Fuse","distance","minMatchCharLength","threshold","keys","backgroundColor","width","height","padding","justifyContent","flexDirection","maxWidth","fontSize","textAlign","fontFamily","Divider","as","marginBottom","placeholder","type","value","onChange","e","term","target","search","marginRight","autoFocus","onClick","maxHeight","overflowY","marginTop","length","GridRow","fontWeight","index","person","item","hr","ReactDOM","render","document","getElementById"],"mappings":"6QAQeA,EARA,CACbC,SAAU,UACVC,UAAW,UACXC,MAAO,UACPC,KAAM,UACNC,MAAO,WC6BHC,EAAWC,YACfC,IACAC,IACAC,IACAC,IACAC,IACAC,IACAC,KAGWC,EAAMC,YAAO,MAAPA,CAAwBV,GAI9BW,EAAOD,YAAO,MAAPA,CAAH,mFAGbV,EACAY,KAKSC,EAAOH,YAAO,MAAPA,CAAH,2DAEbV,EACAc,KAGSC,EAAUL,YAAO,KAAPA,CAAH,+DAEThB,EAAOG,MACdG,GAGSgB,EAAQN,YAAO,QAAPA,CAAH,8QAKPhB,EAAOG,MAEIH,EAAOG,MAKhBH,EAAOG,MAGhBG,GAGSiB,EAAYP,YAAO,IAAPA,CAAH,iDACXhB,EAAOG,MACdG,GAGSkB,EAAaR,YAAO,SAAPA,CAAH,iZAWZhB,EAAOG,MACCH,EAAOG,MAQtBG,G,OC1FSmB,EAAM,WAAO,IAAD,EACaC,IAAMC,SAAS,IAD5B,mBAChBC,EADgB,KACJC,EADI,OAENH,IAAMC,SACrB,IAAIG,MAAM,KAAKC,KAAK,IAAIC,KAAI,iBAAO,CACjCC,KAAMC,IAAMD,KAAKE,WACjBC,MAAOC,KAAKC,MAAsB,GAAhBD,KAAKE,eAHpBC,EAFgB,sBAQqBd,IAAMC,SAAgB,IAR3C,mBAQhBc,EARgB,KAQAC,EARA,KASjBC,EAAc,IAAIC,IAAKJ,EAAQ,CACnCK,SAAU,GACVC,mBAAoB,EACpBC,UAAW,IACXC,KAAM,CAAC,UAOT,OACE,cAAC/B,EAAD,CACEgC,gBAAiBjD,EAAOK,MACxB6C,MAAM,OACNC,OAAO,QACPC,QAAQ,YACRC,eAAe,SALjB,SAOE,eAACpC,EAAD,CAAMqC,cAAc,SAASJ,MAAM,OAAOK,SAAS,QAAnD,UACE,cAAClC,EAAD,CACEmC,SAAS,OACTC,UAAU,SACVC,WAAW,QACXhD,MAAOV,EAAOI,KAJhB,4BAQA,cAACuD,EAAD,IACA,cAACtC,EAAD,CAASuC,GAAG,KAAKH,UAAU,SAASI,aAAa,OAAjD,6BAGA,eAAC5C,EAAD,WACE,cAACK,EAAD,CACEwC,YAAY,iCACZC,KAAK,OACLC,MAAOpC,EACPqC,SAAU,SAACC,GAAD,OA/BIC,EA+BkBD,EAAEE,OAAOJ,MA9BjDtB,EAAkBC,EAAY0B,OAAOF,SACrCtC,EAAcsC,GAFO,IAACA,GAgCdG,YAAY,OACZC,WAAS,IAEX,cAAC/C,EAAD,CAAYgD,QAAS,kBAAM3C,EAAc,KAAzC,sBAEF,eAACd,EAAD,CAAK0D,UAAU,QAAQC,UAAU,SAASC,UAAU,OAApD,UACG/C,EAAWgD,QAAU,GAAKnC,EAAemC,OAAS,GACjD,qCACE,eAACC,EAAD,WACE,cAACtD,EAAD,CAAWuD,WAAW,MAAMtB,SAAS,WAArC,kBAGA,cAACjC,EAAD,CAAWuD,WAAW,MAAMtB,SAAS,WAArC,6BAIDf,EAAeT,KAAI,WAAmB+C,GAAnB,IAASC,EAAT,EAAGC,KAAH,OAClB,eAACJ,EAAD,WACE,cAACtD,EAAD,UAAYyD,EAAO/C,OACnB,cAACV,EAAD,UAAYyD,EAAO5C,iBAK1BR,EAAWgD,QAAU,GAA+B,IAA1BnC,EAAemC,QACxC,cAACrD,EAAD,CAAWkC,UAAU,SAArB,+DAUNE,EAAU3C,IAAOkE,GAAV,0GAMPL,EAAU7D,YAAOG,EAAPH,CAAH,+G,QCvGbmE,IAASC,OACP,cAAC,aAAD,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.e82dc425.chunk.js","sourcesContent":["const colors = {\n  darkBlue: '#3A5683',\n  lightBlue: '#6C91C2',\n  green: '#54755A',\n  gold: '#B7953B',\n  ivory: '#fffff0',\n};\n\nexport default colors;\n","import styled from 'styled-components';\nimport {\n  background,\n  BackgroundProps,\n  border,\n  BorderProps,\n  compose,\n  color,\n  ColorProps,\n  flexbox,\n  FlexboxProps,\n  grid,\n  GridProps as StyledSystemGridProps,\n  layout,\n  LayoutProps,\n  position,\n  PositionProps,\n  space,\n  SpaceProps,\n  typography,\n  TypographyProps,\n} from 'styled-system';\n\nimport colors from '../constants/colors';\n\ninterface AllProps\n  extends BackgroundProps,\n    BorderProps,\n    ColorProps,\n    LayoutProps,\n    PositionProps,\n    SpaceProps,\n    TypographyProps {}\n\nconst allProps = compose(\n  background,\n  border,\n  color,\n  layout,\n  position,\n  space,\n  typography\n);\n\nexport const Box = styled('div')<AllProps>(allProps);\n\ninterface FlexProps extends AllProps, FlexboxProps {}\n\nexport const Flex = styled('div')<FlexProps>`\n  display: flex;\n  flex-direction: row;\n  ${allProps}\n  ${flexbox}\n`;\n\ninterface GridProps extends AllProps, StyledSystemGridProps {}\n\nexport const Grid = styled('div')<GridProps>`\n  display: grid;\n  ${allProps}\n  ${grid}\n`;\n\nexport const Heading = styled('h1')<AllProps>`\n  margin: 0;\n  color: ${colors.green};\n  ${allProps}\n`;\n\nexport const Input = styled('input')<AllProps>`\n  height: 2rem;\n  width: 100%;\n  background-color: transparent;\n  padding: 1rem;\n  color: ${colors.green};\n  outline: none;\n  border: 1px solid ${colors.green};\n  border-radius: 0.25rem;\n  font-size: 1rem;\n\n  ::placeholder {\n    color: ${colors.green};\n  }\n\n  ${allProps}\n`;\n\nexport const Paragraph = styled('p')<AllProps>`\n  color: ${colors.green};\n  ${allProps}\n`;\n\nexport const TextButton = styled('button')<AllProps>`\n  font-family: inherit;\n  font-size: 100%;\n  line-height: 1.15;\n  margin: 0;\n  padding: 0;\n  overflow: visible;\n  text-transform: none;\n  background-color: transparent;\n  border: none;\n  cursor: pointer;\n  color: ${colors.green};\n  outline-color: ${colors.green};\n  border-radius: 0.25rem;\n  --webkit-appearance: button;\n\n  &:hover {\n    text-decoration: underline;\n  }\n\n  ${allProps};\n`;\n","import React from 'react';\nimport styled from 'styled-components';\nimport faker from 'faker';\nimport Fuse from 'fuse.js';\n\nimport {\n  Box,\n  Flex,\n  Grid,\n  Heading,\n  Input,\n  Paragraph,\n  TextButton,\n} from './components/styled';\n\nimport colors from './constants/colors';\n\ntype Person = {\n  name: string;\n  table: number;\n};\n\nexport const App = () => {\n  const [searchTerm, setSearchTerm] = React.useState('');\n  const [people] = React.useState<Person[]>(\n    new Array(100).fill('').map(() => ({\n      name: faker.name.findName(),\n      table: Math.round(Math.random() * 12),\n    }))\n  );\n  const [filteredPeople, setFilteredPeople] = React.useState<any[]>([]);\n  const fuzzySearch = new Fuse(people, {\n    distance: 50,\n    minMatchCharLength: 2,\n    threshold: 0.15,\n    keys: ['name'],\n  });\n  const handleOnChange = (term: string) => {\n    setFilteredPeople(fuzzySearch.search(term));\n    setSearchTerm(term);\n  };\n\n  return (\n    <Flex\n      backgroundColor={colors.ivory}\n      width=\"100%\"\n      height=\"100vh\"\n      padding=\"2rem 1rem\"\n      justifyContent=\"center\"\n    >\n      <Flex flexDirection=\"column\" width=\"100%\" maxWidth=\"30rem\">\n        <Heading\n          fontSize=\"4rem\"\n          textAlign=\"center\"\n          fontFamily=\"serif\"\n          color={colors.gold}\n        >\n          Megan &amp; Jordan\n        </Heading>\n        <Divider />\n        <Heading as=\"h2\" textAlign=\"center\" marginBottom=\"1rem\">\n          Find your table\n        </Heading>\n        <Flex>\n          <Input\n            placeholder=\"Start typing to find your name\"\n            type=\"text\"\n            value={searchTerm}\n            onChange={(e) => handleOnChange(e.target.value)}\n            marginRight=\"1rem\"\n            autoFocus\n          />\n          <TextButton onClick={() => setSearchTerm('')}>Clear</TextButton>\n        </Flex>\n        <Box maxHeight=\"25rem\" overflowY=\"scroll\" marginTop=\"1rem\">\n          {searchTerm.length >= 2 && filteredPeople.length > 0 && (\n            <>\n              <GridRow>\n                <Paragraph fontWeight=\"500\" fontSize=\"0.875rem\">\n                  NAME\n                </Paragraph>\n                <Paragraph fontWeight=\"500\" fontSize=\"0.875rem\">\n                  TABLE NUMBER\n                </Paragraph>\n              </GridRow>\n              {filteredPeople.map(({ item: person }, index) => (\n                <GridRow>\n                  <Paragraph>{person.name}</Paragraph>\n                  <Paragraph>{person.table}</Paragraph>\n                </GridRow>\n              ))}\n            </>\n          )}\n          {searchTerm.length >= 2 && filteredPeople.length === 0 && (\n            <Paragraph textAlign=\"center\">\n              Hmm, we can't find your name. Try again.\n            </Paragraph>\n          )}\n        </Box>\n      </Flex>\n    </Flex>\n  );\n};\n\nconst Divider = styled.hr`\n  border: 0;\n  border-top: 1px solid rgb(200, 200, 200);\n  margin: 1rem 0;\n`;\n\nconst GridRow = styled(Grid)`\n  grid-template-columns: 2fr 1fr;\n  border-bottom: 1px solid rgb(215, 215, 215);\n`;\n","import * as React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport { App } from './App';\n\nimport './index.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}