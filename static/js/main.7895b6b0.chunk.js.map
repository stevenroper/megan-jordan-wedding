{"version":3,"sources":["constants/colors.ts","App.tsx","index.tsx"],"names":["colors","darkBlue","lightBlue","green","gold","ivory","App","React","useState","searchTerm","setSearchTerm","Array","fill","map","name","faker","findName","table","Math","round","random","people","filteredPeople","setFilteredPeople","fuzzySearch","Fuse","distance","minMatchCharLength","threshold","keys","height","bgGradient","paddingTop","as","size","color","fontFamily","textAlign","marginY","borderColor","marginBottom","value","placeholder","focusBorderColor","_placeholder","fontWeight","marginRight","onChange","e","term","target","search","autoFocus","_focus","outlineColor","variant","onClick","type","style","width","maxHeight","overflowY","length","index","person","item","theme","extendTheme","initialColorMode","useSystemColorMode","ReactDOM","render","document","getElementById"],"mappings":"+TAQeA,EARA,CACbC,SAAU,UACVC,UAAW,UACXC,MAAO,UACPC,KAAM,UACNC,MAAO,W,OCsBIC,EAAM,WAAO,IAAD,EACaC,IAAMC,SAAS,IAD5B,mBAChBC,EADgB,KACJC,EADI,OAENH,IAAMC,SACrB,IAAIG,MAAM,KAAKC,KAAK,IAAIC,KAAI,iBAAO,CACjCC,KAAMC,IAAMD,KAAKE,WACjBC,MAAOC,KAAKC,MAAsB,GAAhBD,KAAKE,eAHpBC,EAFgB,sBAQqBd,IAAMC,SAAgB,IAR3C,mBAQhBc,EARgB,KAQAC,EARA,KASjBC,EAAc,IAAIC,IAAKJ,EAAQ,CACnCK,SAAU,GACVC,mBAAoB,EACpBC,UAAW,IACXC,KAAM,CAAC,UAOT,OACE,cAAC,IAAD,CAAKC,OAAO,QAAQC,WAAU,8BAAyB/B,EAAOK,MAAhC,KAA9B,SACE,eAAC,IAAD,CAAW2B,WAAW,OAAtB,UACE,cAAC,IAAD,CACEC,GAAG,KACHC,KAAK,MACLC,MAAOnC,EAAOI,KACdgC,WAAW,QACXC,UAAU,SALZ,4BASA,cAAC,IAAD,CAASC,QAAQ,OAAOC,YAAY,uBACpC,cAAC,IAAD,CAASF,UAAU,SAASG,aAAa,OAAOL,MAAOnC,EAAOG,MAA9D,6BAGA,eAAC,IAAD,CAAMqC,aAAa,OAAnB,UACE,cAAC,IAAD,CACE1B,KAAK,aACL2B,MAAOhC,EACPiC,YAAY,iCACZC,iBAAkB3C,EAAOG,MACzByC,aAAc,CAAET,MAAOnC,EAAOG,MAAO0C,WAAY,OACjDC,YAAY,OACZC,SAAU,SAACC,GAAD,OA7BIC,EA6BkBD,EAAEE,OAAOT,MA5BjDlB,EAAkBC,EAAY2B,OAAOF,SACrCvC,EAAcuC,GAFO,IAACA,GA8BdG,WAAS,IAEX,cAAC,IAAD,CACEjB,MAAOnC,EAAOG,MACdkD,OAAQ,CAAEC,aAActD,EAAOG,OAC/BoD,QAAQ,OACRC,QAAS,kBAAM9C,EAAc,KAJ/B,sBASF,uBACEgC,YAAY,iCACZe,KAAK,OACLC,MAAO,CAAEC,MAAO,UAElB,eAAC,IAAD,CAAKC,UAAU,QAAQC,UAAU,SAAjC,UACGpD,EAAWqD,QAAU,GAAKxC,EAAewC,OAAS,GACjD,eAAC,IAAD,WACE,cAAC,IAAD,UACE,eAAC,IAAD,WACE,cAAC,IAAD,mBACA,cAAC,IAAD,gCAGJ,cAAC,IAAD,UACGxC,EAAeT,KAAI,WAAmBkD,GAAnB,IAASC,EAAT,EAAGC,KAAH,OAClB,eAAC,IAAD,WACE,cAAC,IAAD,iBAAKD,QAAL,IAAKA,OAAL,EAAKA,EAAQlD,OACb,cAAC,IAAD,iBAAKkD,QAAL,IAAKA,OAAL,EAAKA,EAAQ/C,UAFN8C,WAQhBtD,EAAWqD,QAAU,GAA+B,IAA1BxC,EAAewC,QACxC,cAAC,IAAD,CAAMzB,UAAU,SAAhB,+DCjGN6B,EAAQC,YALmB,CAC/BC,iBAAkB,QAClBC,oBAAoB,IAKtBC,IAASC,OACP,cAAC,aAAD,UACE,cAAC,IAAD,CAAgBL,MAAOA,EAAvB,SACE,cAAC,EAAD,QAGJM,SAASC,eAAe,W","file":"static/js/main.7895b6b0.chunk.js","sourcesContent":["const colors = {\n  darkBlue: '#3A5683',\n  lightBlue: '#6C91C2',\n  green: '#54755A',\n  gold: '#B7953B',\n  ivory: '#EAF2E3',\n};\n\nexport default colors;\n","import React from 'react';\nimport {\n  Box,\n  Button,\n  Container,\n  Divider,\n  Flex,\n  Heading,\n  Input,\n  Table,\n  Thead,\n  Tbody,\n  Tr,\n  Th,\n  Td,\n  Text,\n} from '@chakra-ui/react';\nimport faker from 'faker';\nimport Fuse from 'fuse.js';\n\nimport colors from './constants/colors';\n\ntype Person = {\n  name: string;\n  table: number;\n};\n\nexport const App = () => {\n  const [searchTerm, setSearchTerm] = React.useState('');\n  const [people] = React.useState<Person[]>(\n    new Array(100).fill('').map(() => ({\n      name: faker.name.findName(),\n      table: Math.round(Math.random() * 12),\n    }))\n  );\n  const [filteredPeople, setFilteredPeople] = React.useState<any[]>([]);\n  const fuzzySearch = new Fuse(people, {\n    distance: 50,\n    minMatchCharLength: 2,\n    threshold: 0.15,\n    keys: ['name'],\n  });\n  const handleOnChange = (term: string) => {\n    setFilteredPeople(fuzzySearch.search(term));\n    setSearchTerm(term);\n  };\n\n  return (\n    <Box height=\"100vh\" bgGradient={`linear(to-b, white, ${colors.ivory})`}>\n      <Container paddingTop=\"2rem\">\n        <Heading\n          as=\"h1\"\n          size=\"4xl\"\n          color={colors.gold}\n          fontFamily=\"serif\"\n          textAlign=\"center\"\n        >\n          Megan &amp; Jordan\n        </Heading>\n        <Divider marginY=\"1rem\" borderColor=\"rgb(200, 200, 200)\" />\n        <Heading textAlign=\"center\" marginBottom=\"1rem\" color={colors.green}>\n          Find your table\n        </Heading>\n        <Flex marginBottom=\"1rem\">\n          <Input\n            name=\"searchTerm\"\n            value={searchTerm}\n            placeholder=\"Start typing to find your name\"\n            focusBorderColor={colors.green}\n            _placeholder={{ color: colors.green, fontWeight: '500' }}\n            marginRight=\"1rem\"\n            onChange={(e) => handleOnChange(e.target.value)}\n            autoFocus\n          />\n          <Button\n            color={colors.green}\n            _focus={{ outlineColor: colors.green }}\n            variant=\"link\"\n            onClick={() => setSearchTerm('')}\n          >\n            Clear\n          </Button>\n        </Flex>\n        <input\n          placeholder=\"Start typing to find your name\"\n          type=\"text\"\n          style={{ width: '100%' }}\n        />\n        <Box maxHeight=\"25rem\" overflowY=\"scroll\">\n          {searchTerm.length >= 2 && filteredPeople.length > 0 && (\n            <Table>\n              <Thead>\n                <Tr>\n                  <Th>Name</Th>\n                  <Th>Table Number</Th>\n                </Tr>\n              </Thead>\n              <Tbody>\n                {filteredPeople.map(({ item: person }, index) => (\n                  <Tr key={index}>\n                    <Td>{person?.name}</Td>\n                    <Td>{person?.table}</Td>\n                  </Tr>\n                ))}\n              </Tbody>\n            </Table>\n          )}\n          {searchTerm.length >= 2 && filteredPeople.length === 0 && (\n            <Text textAlign=\"center\">\n              Hmm, we can't find your name. Try again.\n            </Text>\n          )}\n        </Box>\n      </Container>\n    </Box>\n  );\n};\n","import * as React from 'react';\nimport ReactDOM from 'react-dom';\nimport { ChakraProvider, extendTheme, ThemeConfig } from '@chakra-ui/react';\n\nimport { App } from './App';\n\nconst themeConfig: ThemeConfig = {\n  initialColorMode: 'light',\n  useSystemColorMode: false,\n};\n\nconst theme = extendTheme(themeConfig);\n\nReactDOM.render(\n  <React.StrictMode>\n    <ChakraProvider theme={theme}>\n      <App />\n    </ChakraProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}