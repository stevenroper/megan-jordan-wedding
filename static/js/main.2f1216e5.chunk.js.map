{"version":3,"sources":["constants/colors.ts","App.tsx","index.tsx"],"names":["colors","darkBlue","lightBlue","green","gold","ivory","App","React","useState","Array","fill","map","name","faker","findName","table","Math","round","random","people","Fuse","distance","minMatchCharLength","threshold","keys","style","backgroundColor","width","height","padding","placeholder","type","ReactDOM","render","document","getElementById"],"mappings":"wOAQeA,EARA,CACbC,SAAU,UACVC,UAAW,UACXC,MAAO,UACPC,KAAM,UACNC,MAAO,W,OCuBIC,EAAM,WAAO,IAAD,EACaC,IAAMC,SAAS,IAD5B,gCAEND,IAAMC,SACrB,IAAIC,MAAM,KAAKC,KAAK,IAAIC,KAAI,iBAAO,CACjCC,KAAMC,IAAMD,KAAKE,WACjBC,MAAOC,KAAKC,MAAsB,GAAhBD,KAAKE,gBAHpBC,EAFgB,sBAQqBZ,IAAMC,SAAgB,IAR3C,6BASH,IAAIY,IAAKD,EAAQ,CACnCE,SAAU,GACVC,mBAAoB,EACpBC,UAAW,IACXC,KAAM,CAAC,UAuET,OACE,qBACEC,MAAO,CACLC,gBAAiB1B,EAAOK,MACxBsB,MAAO,OACPC,OAAQ,QACRC,QAAS,aALb,SAQE,uBAAOC,YAAY,iCAAiCC,KAAK,Y,QClH/DC,IAASC,OACP,cAAC,aAAD,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.2f1216e5.chunk.js","sourcesContent":["const colors = {\n  darkBlue: '#3A5683',\n  lightBlue: '#6C91C2',\n  green: '#54755A',\n  gold: '#B7953B',\n  ivory: '#EAF2E3',\n};\n\nexport default colors;\n","import React from 'react';\nimport styled from 'styled-components';\n// import {\n//   Box,\n//   Button,\n//   Container,\n//   Divider,\n//   Flex,\n//   Heading,\n//   Input,\n//   Table,\n//   Thead,\n//   Tbody,\n//   Tr,\n//   Th,\n//   Td,\n//   Text,\n// } from '@chakra-ui/react';\nimport faker from 'faker';\nimport Fuse from 'fuse.js';\n\nimport colors from './constants/colors';\n\ntype Person = {\n  name: string;\n  table: number;\n};\n\nexport const App = () => {\n  const [searchTerm, setSearchTerm] = React.useState('');\n  const [people] = React.useState<Person[]>(\n    new Array(100).fill('').map(() => ({\n      name: faker.name.findName(),\n      table: Math.round(Math.random() * 12),\n    }))\n  );\n  const [filteredPeople, setFilteredPeople] = React.useState<any[]>([]);\n  const fuzzySearch = new Fuse(people, {\n    distance: 50,\n    minMatchCharLength: 2,\n    threshold: 0.15,\n    keys: ['name'],\n  });\n  const handleOnChange = (term: string) => {\n    setFilteredPeople(fuzzySearch.search(term));\n    setSearchTerm(term);\n  };\n\n  // return (\n  //   <Box height=\"100vh\" bgGradient={`linear(to-b, white, ${colors.ivory})`}>\n  //     <Container paddingTop=\"2rem\">\n  //       <Heading\n  //         as=\"h1\"\n  //         size=\"4xl\"\n  //         color={colors.gold}\n  //         fontFamily=\"serif\"\n  //         textAlign=\"center\"\n  //       >\n  //         Megan &amp; Jordan\n  //       </Heading>\n  //       <Divider marginY=\"1rem\" borderColor=\"rgb(200, 200, 200)\" />\n  //       <Heading textAlign=\"center\" marginBottom=\"1rem\" color={colors.green}>\n  //         Find your table\n  //       </Heading>\n  //       <Flex marginBottom=\"1rem\">\n  //         <Input\n  //           name=\"searchTerm\"\n  //           value={searchTerm}\n  //           placeholder=\"Start typing to find your name\"\n  //           focusBorderColor={colors.green}\n  //           _placeholder={{ color: colors.green, fontWeight: '500' }}\n  //           marginRight=\"1rem\"\n  //           onChange={(e) => handleOnChange(e.target.value)}\n  //           autoFocus\n  //         />\n  //         <Button\n  //           color={colors.green}\n  //           _focus={{ outlineColor: colors.green }}\n  //           variant=\"link\"\n  //           onClick={() => setSearchTerm('')}\n  //         >\n  //           Clear\n  //         </Button>\n  //       </Flex>\n  //       <Box maxHeight=\"25rem\" overflowY=\"scroll\">\n  //         {searchTerm.length >= 2 && filteredPeople.length > 0 && (\n  //           <Table>\n  //             <Thead>\n  //               <Tr>\n  //                 <Th>Name</Th>\n  //                 <Th>Table Number</Th>\n  //               </Tr>\n  //             </Thead>\n  //             <Tbody>\n  //               {filteredPeople.map(({ item: person }, index) => (\n  //                 <Tr key={index}>\n  //                   <Td>{person?.name}</Td>\n  //                   <Td>{person?.table}</Td>\n  //                 </Tr>\n  //               ))}\n  //             </Tbody>\n  //           </Table>\n  //         )}\n  //         {searchTerm.length >= 2 && filteredPeople.length === 0 && (\n  //           <Text textAlign=\"center\">\n  //             Hmm, we can't find your name. Try again.\n  //           </Text>\n  //         )}\n  //       </Box>\n  //     </Container>\n  //   </Box>\n  // );\n  return (\n    <div\n      style={{\n        backgroundColor: colors.ivory,\n        width: '100%',\n        height: '100vh',\n        padding: '2rem 1rem',\n      }}\n    >\n      <input placeholder=\"Start typing to find your name\" type=\"text\" />\n    </div>\n  );\n};\n","import * as React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport { App } from './App';\n\nimport './index.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}