{"version":3,"sources":["constants/colors.ts","components/styled.tsx","App.tsx","index.tsx"],"names":["colors","darkBlue","lightBlue","green","gold","ivory","allProps","compose","background","border","color","layout","position","space","Flex","styled","flexbox","Input","grid","input","App","React","useState","Array","fill","map","name","faker","findName","table","Math","round","random","people","Fuse","distance","minMatchCharLength","threshold","keys","backgroundColor","width","height","padding","justifyContent","maxWidth","placeholder","type","ReactDOM","render","document","getElementById"],"mappings":"mQAQeA,EARA,CACbC,SAAU,UACVC,UAAW,UACXC,MAAO,UACPC,KAAM,UACNC,MAAO,WC4BHC,EAAWC,YAAQC,IAAYC,IAAQC,IAAOC,IAAQC,IAAUC,KAMzDC,GAJoBC,YAAO,MAAPA,CAAcT,GAIZS,YAAO,MAAPA,CAAH,mFAG5BT,EACAU,MAWSC,GANsBF,YAAO,MAAPA,CAAH,2DAE5BT,EACAY,KAGiBH,IAAOI,MAAV,qTAKPnB,EAAOG,MAEIH,EAAOG,MAIJH,EAAOG,MAKnBH,EAAOG,Q,OCxCPiB,EAAM,WAAO,IAAD,EACaC,IAAMC,SAAS,IAD5B,gCAEND,IAAMC,SACrB,IAAIC,MAAM,KAAKC,KAAK,IAAIC,KAAI,iBAAO,CACjCC,KAAMC,IAAMD,KAAKE,WACjBC,MAAOC,KAAKC,MAAsB,GAAhBD,KAAKE,gBAHpBC,EAFgB,sBAQqBZ,IAAMC,SAAgB,IAR3C,6BASH,IAAIY,IAAKD,EAAQ,CACnCE,SAAU,GACVC,mBAAoB,EACpBC,UAAW,IACXC,KAAM,CAAC,UAuET,OACE,cAACxB,EAAD,CACEyB,gBAAiBvC,EAAOK,MACxBmC,MAAM,OACNC,OAAO,QACPC,QAAQ,YACRC,eAAe,SALjB,SAOE,cAAC7B,EAAD,CAAM0B,MAAM,OAAOI,SAAS,QAA5B,SACE,cAAC3B,EAAD,CAAO4B,YAAY,iCAAiCC,KAAK,c,QCpHjEC,IAASC,OACP,cAAC,aAAD,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.2f40a03b.chunk.js","sourcesContent":["const colors = {\n  darkBlue: '#3A5683',\n  lightBlue: '#6C91C2',\n  green: '#54755A',\n  gold: '#B7953B',\n  ivory: '#EAF2E3',\n};\n\nexport default colors;\n","import { FC } from 'react';\n\nimport styled from 'styled-components';\nimport {\n  background,\n  BackgroundProps,\n  border,\n  BorderProps,\n  compose,\n  color,\n  ColorProps,\n  flexbox,\n  FlexboxProps,\n  grid,\n  GridProps as StyledSystemGridProps,\n  layout,\n  LayoutProps,\n  position,\n  PositionProps,\n  space,\n  SpaceProps,\n} from 'styled-system';\n\nimport colors from '../constants/colors';\n\ninterface AllProps\n  extends BackgroundProps,\n    BorderProps,\n    ColorProps,\n    LayoutProps,\n    PositionProps,\n    SpaceProps {}\n\nconst allProps = compose(background, border, color, layout, position, space);\n\nexport const Box: FC<AllProps> = styled('div')(allProps);\n\ninterface FlexProps extends AllProps, FlexboxProps {}\n\nexport const Flex: FC<FlexProps> = styled('div')`\n  display: flex;\n  flex-direction: row;\n  ${allProps}\n  ${flexbox}\n`;\n\ninterface GridProps extends AllProps, StyledSystemGridProps {}\n\nexport const Grid: FC<GridProps> = styled('div')`\n  display: grid;\n  ${allProps}\n  ${grid}\n`;\n\nexport const Input = styled.input`\n  height: 2rem;\n  width: 100%;\n  background-color: transparent;\n  padding: 1rem;\n  color: ${colors.green};\n  outline: none;\n  border: 1px solid ${colors.green};\n  border-radius: 0.25rem;\n\n  &:focus {\n    outline: 2px solid ${colors.green};\n    border: none;\n  }\n\n  ::placeholder {\n    color: ${colors.green};\n  }\n`;\n","import React from 'react';\nimport styled from 'styled-components';\n// import {\n//   Box,\n//   Button,\n//   Container,\n//   Divider,\n//   Flex,\n//   Heading,\n//   Input,\n//   Table,\n//   Thead,\n//   Tbody,\n//   Tr,\n//   Th,\n//   Td,\n//   Text,\n// } from '@chakra-ui/react';\nimport faker from 'faker';\nimport Fuse from 'fuse.js';\n\nimport { Box, Flex, Input } from './components/styled';\n\nimport colors from './constants/colors';\n\ntype Person = {\n  name: string;\n  table: number;\n};\n\nexport const App = () => {\n  const [searchTerm, setSearchTerm] = React.useState('');\n  const [people] = React.useState<Person[]>(\n    new Array(100).fill('').map(() => ({\n      name: faker.name.findName(),\n      table: Math.round(Math.random() * 12),\n    }))\n  );\n  const [filteredPeople, setFilteredPeople] = React.useState<any[]>([]);\n  const fuzzySearch = new Fuse(people, {\n    distance: 50,\n    minMatchCharLength: 2,\n    threshold: 0.15,\n    keys: ['name'],\n  });\n  const handleOnChange = (term: string) => {\n    setFilteredPeople(fuzzySearch.search(term));\n    setSearchTerm(term);\n  };\n\n  // return (\n  //   <Box height=\"100vh\" bgGradient={`linear(to-b, white, ${colors.ivory})`}>\n  //     <Container paddingTop=\"2rem\">\n  //       <Heading\n  //         as=\"h1\"\n  //         size=\"4xl\"\n  //         color={colors.gold}\n  //         fontFamily=\"serif\"\n  //         textAlign=\"center\"\n  //       >\n  //         Megan &amp; Jordan\n  //       </Heading>\n  //       <Divider marginY=\"1rem\" borderColor=\"rgb(200, 200, 200)\" />\n  //       <Heading textAlign=\"center\" marginBottom=\"1rem\" color={colors.green}>\n  //         Find your table\n  //       </Heading>\n  //       <Flex marginBottom=\"1rem\">\n  //         <Input\n  //           name=\"searchTerm\"\n  //           value={searchTerm}\n  //           placeholder=\"Start typing to find your name\"\n  //           focusBorderColor={colors.green}\n  //           _placeholder={{ color: colors.green, fontWeight: '500' }}\n  //           marginRight=\"1rem\"\n  //           onChange={(e) => handleOnChange(e.target.value)}\n  //           autoFocus\n  //         />\n  //         <Button\n  //           color={colors.green}\n  //           _focus={{ outlineColor: colors.green }}\n  //           variant=\"link\"\n  //           onClick={() => setSearchTerm('')}\n  //         >\n  //           Clear\n  //         </Button>\n  //       </Flex>\n  //       <Box maxHeight=\"25rem\" overflowY=\"scroll\">\n  //         {searchTerm.length >= 2 && filteredPeople.length > 0 && (\n  //           <Table>\n  //             <Thead>\n  //               <Tr>\n  //                 <Th>Name</Th>\n  //                 <Th>Table Number</Th>\n  //               </Tr>\n  //             </Thead>\n  //             <Tbody>\n  //               {filteredPeople.map(({ item: person }, index) => (\n  //                 <Tr key={index}>\n  //                   <Td>{person?.name}</Td>\n  //                   <Td>{person?.table}</Td>\n  //                 </Tr>\n  //               ))}\n  //             </Tbody>\n  //           </Table>\n  //         )}\n  //         {searchTerm.length >= 2 && filteredPeople.length === 0 && (\n  //           <Text textAlign=\"center\">\n  //             Hmm, we can't find your name. Try again.\n  //           </Text>\n  //         )}\n  //       </Box>\n  //     </Container>\n  //   </Box>\n  // );\n  return (\n    <Flex\n      backgroundColor={colors.ivory}\n      width=\"100%\"\n      height=\"100vh\"\n      padding=\"2rem 1rem\"\n      justifyContent=\"center\"\n    >\n      <Flex width=\"100%\" maxWidth=\"30rem\">\n        <Input placeholder=\"Start typing to find your name\" type=\"text\" />\n      </Flex>\n    </Flex>\n  );\n};\n","import * as React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport { App } from './App';\n\nimport './index.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}